/**
 * @Company: Intertek
 * @Project : Phoenix 2.0 for Commercial and Electronics
 * @Copyright: Intertek 2009
 *
 */
package com.intertek.phoenix.entity;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Index;

import com.intertek.entity.Bank;
import com.intertek.entity.BankAccount;
import com.intertek.entity.Contact;
import com.intertek.entity.Contract;
import com.intertek.entity.CustAddress;
import com.intertek.entity.Customer;
import com.intertek.phoenix.job.ContractJobOrder;
import com.intertek.phoenix.job.ContractServiceLevel;
import com.intertek.phoenix.jobOrder.JobOrderAttachment;
import com.intertek.phoenix.jobOrder.JobOrderNote;

/**
 * A convenient class that holds all the customer related information.
 * <p>
 * Note, the final relationship between this class and CEJobOrder will
 * be determined later.
 *
 * @author richard.qin
 * @author lily.sun
 */
@Entity
@Table(name="CE_JOB_CONTRACT")
public class CEJobContract extends ContractServiceLevel implements ContractJobOrder{
    @Id
    @SequenceGenerator(name="CeJobContract_seq", sequenceName = "CE_JOB_CONTRACT_SEQ")
    @GeneratedValue(generator = "CeJobContract_seq" )
    @Column(name = "ID")
    private long id;
    
    @Column(name = "JOB_ORDER_NUMBER", updatable = false, insertable = false, nullable = false)
    private String jobOrderNumber;
    @ManyToOne
    @JoinColumn(name="JOB_ORDER_NUMBER")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private CEJobOrder jobOrder;

    @Column(name="CUSTOMER_CODE", updatable = false, insertable = false, nullable = false)
    private String customerCode;
    @ManyToOne
    @JoinColumn(name="CUSTOMER_CODE")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Customer customer;

    @Column (name="CONTRACT_CODE", updatable = false, insertable = false, nullable = false)
    private String contractCode;
    @ManyToOne
    @JoinColumn (name="CONTRACT_CODE")
    @Index(name = "JOCD_INDEX_CONTRACT")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Contract contract;

    @Column(name="BILLING_CUST_CODE", updatable = false, insertable = false)
    private String billingCustCode;
    @ManyToOne
    @JoinColumn(name="BILLING_CUST_CODE")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Customer billingCustomer;
    
    @Column(name="SHIPPING_CUST_CODE", updatable = false, insertable = false)
    private String shippingCustCode;
    @ManyToOne
    @JoinColumn(name="SHIPPING_CUST_CODE")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Customer shippingCustomer;
    
    @Column(name="MANF_CUST_CODE", updatable = false, insertable = false)
    private String manfCustCode;
    @ManyToOne
    @JoinColumn(name="MANF_CUST_CODE")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Customer manufacturerCustomer;

    @Column(name = "SOURCE_ORIGIN")
    @Enumerated(EnumType.STRING)
    private SourceOrigin sourceOrigin;

    @Column(name="CONTACT_ID", updatable = false, insertable = false)
    private long contactId;
    @ManyToOne
    @JoinColumn(name="CONTACT_ID")
    @Index(name = "JOCD_INDEX_CONTACT")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Contact contact;

    @Column(name="CONTACT_ADDRESS_ID", updatable = false, insertable = false)
    private long contactAddressId;
    @ManyToOne
    @JoinColumn(name="CONTACT_ADDRESS_ID")
    @Index(name = "JOCD_INDEX_CONTACT_ADDRESS")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private CustAddress contactAddress;

    @Column(name="SHIPPING_CONTACT_ID", updatable = false, insertable = false)
    private long shippingContactId;
    @ManyToOne
    @JoinColumn(name="SHIPPING_CONTACT_ID")
    @Index(name = "JOCD_INDEX_SHIPPING_CONTACT")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Contact shippingContact;

    @Column(name="SHIPPING_ADDRESS_ID", updatable = false, insertable = false)
    private long shippingAddressId;
    @ManyToOne
    @JoinColumn(name="SHIPPING_ADDRESS_ID")
    @Index(name = "JOCD_INDEX_SHIPPING_ADDRESS")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private CustAddress shippingAddress;

    @Column(name="BILLING_CONTACT_ID", updatable = false, insertable = false)
    private long billingContactId;
    @ManyToOne
    @JoinColumn(name="BILLING_CONTACT_ID")
    @Index(name = "JOCD_INDEX_BILLING_CONTACT")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Contact billingContact;

    @Column(name="BILLING_ADDRESS_ID", updatable = false, insertable = false)
    private long billingAddressId;
    @ManyToOne
    @JoinColumn(name="BILLING_ADDRESS_ID")
    @Index(name = "JOCD_INDEX_BILLING_ADDRESS")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private CustAddress billingAddress;

    @Column(name="MANUFACTURER_CONTACT_ID", updatable = false, insertable = false)
    private long manufacturerContactId;
    @ManyToOne
    @JoinColumn(name="MANUFACTURER_CONTACT_ID")
    @Index(name = "JOCD_INDEX_MNF_CONTACT")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Contact manufacturerContact;

    @Column(name="MANF_ADDRESS_ID", updatable = false, insertable = false)
    private long manfAddressId;
    @ManyToOne
    @JoinColumn(name="MANF_ADDRESS_ID")
    @Index(name = "JOCD_INDEX_MNF_ADDRESS")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private CustAddress manufacturerAddress;

    @Column(name = "VAT_REG_ID", length = 128)
    private String vatRegId;

    @Column(name = "PO_NUMBER", length = 128)
    private String poNumber;

    @Column(name = "ZONE_ID", length = 128)
    private String zoneId;

    @Column(name = "ZONE_DESCRIPTION", columnDefinition = "NVARCHAR2(1024)")
    private String zoneDescription;

    @Column(name="REMIT_TO_CODE", updatable = false, insertable = false)
    private String remitToCode;
    @ManyToOne
    @JoinColumn(name="REMIT_TO_CODE")
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    private Bank remitTo;

    @Column(name="REMIT_TO_BANK_ACCOUNT_BU_NAME", updatable = false, insertable = false)
    private String remitToBankAccountBuName;

    @Column(name="REMIT_TO_BANK_CODE", updatable = false, insertable = false)
    private String remitToBankCode;

    @Column(name="REMIT_TO_BANK_ACCOUNT_NUM", updatable = false, insertable = false)
    private String remitToBankAccountNum;
/*        
    @ManyToOne
    @JoinColumns({
            @JoinColumn(name = "REMIT_TO_BANK_ACCOUNT_BU_NAME", referencedColumnName = "BUSINESS_UNIT_NAME"),
            @JoinColumn(name = "REMIT_TO_BANK_CODE", referencedColumnName = "BANK_CODE"),
            @JoinColumn(name = "REMIT_TO_BANK_ACCOUNT_NUM", referencedColumnName = "BANK_ACCT_CODE")
    })
    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    */
    private BankAccount remitToBankAccount;

    @Column(name = "PAYMENT_REFERENCE_NUM", length = 128)
    private String paymentReferenceNum;

    @Column(name="PAYMENT_TYPE")
    @Enumerated(EnumType.STRING)
    private PaymentType paymentType;

    @Column(name = "PAYMENT_TERMS", length = 128)
    private String paymentTerms;

    @Column(name = "PREPAYMENT_REQUIRED", length = 1)
    @org.hibernate.annotations.Type(type = "yes_no")
    private boolean prepaymentRequired;

    @Column(name = "CONTRACT_CURRENCY", length = 128)
    private String contractCurrency;
    @Column(name = "TRANSACTION_CURRENCY", length = 128, nullable = false)
    private String transactionCurrency;

    @Column(name = "INVOICE_LANGUAGE", length = 128)
    private String invoiceLanguage;
    @Column(name = "INVOICE_TYPE", length = 128)
    private String invoiceType;
    @Column(name = "INVOICE_DESCRIPTION", length = 128)
    private String invoiceDescription;

    @OneToMany(mappedBy = "jobContract", fetch = FetchType.LAZY)
    private Set<CEJobOrderLineItem> lineItems;
    
    @OneToMany(mappedBy = "jobContract", fetch = FetchType.LAZY)
    @JoinColumn(name = "NOTE_ID")
    private Set<JobOrderNote> notes;

    @OneToMany(mappedBy = "jobContract", fetch = FetchType.LAZY)
    @JoinColumn(name = "ATTACHMENT_ID")
    private Set<JobOrderAttachment> attachments;
    
    private Set<JobContractService> jobContractServices;
    
    private Set<JobContractTest> jobContractTests;
    
    private Set<JobContractSlate> jobContractSlates;

    public CEJobContract(){

    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public CEJobOrder getJobOrder() {
        return jobOrder;
    }

    public void setJobOrder(CEJobOrder jobOrder) {
        this.jobOrder = jobOrder;
    }


    public String getJobOrderNumber() {
        return jobOrderNumber;
    }

    public void setJobOrderNumber(String jobOrderNumber) {
        this.jobOrderNumber = jobOrderNumber;
    }

    public String getCustomerCode() {
        return customerCode;
    }

    public void setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
    }

    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        if(this.customer != null){
            this.customerCode = customer.getCustCode();
        }
        this.customer = customer;
    }

    public String getContractCode() {
        return contractCode;
    }

    public void setContractCode(String contractCode) {
        this.contractCode = contractCode;
    }

    public Contract getContract() {
        return contract;
    }

    public void setContract(Contract contract) {
        this.contract = contract;
    }

    public SourceOrigin getSourceOrigin() {
        return sourceOrigin;
    }

    public void setSourceOrigin(SourceOrigin sourceOrigin) {
        this.sourceOrigin = sourceOrigin;
    }

    public long getContactId() {
        return contactId;
    }

    public void setContactId(long contactId) {
        this.contactId = contactId;
    }

    public Contact getContact() {
        return contact;
    }

    public void setContact(Contact contact) {
        this.contact = contact;
    }

    public CustAddress getContactAddress() {
        return contactAddress;
    }

    public void setContactAddress(CustAddress contactAddress) {
        this.contactAddress = contactAddress;
    }

    public boolean isShippingCustomerDifferent() {
        return isCustomerDifferent(getCustomer(), getShippingCustomer());
    }

    private boolean isCustomerDifferent(Customer cust1, Customer cust2) {
        if (cust1 == null || cust2 == null)
            return false;
        return !cust1.getCustCode().trim().equalsIgnoreCase(cust2.getCustCode().trim());
    }

    public long getShippingContactId() {
        return shippingContactId;
    }

    public void setShippingContactId(long shippingContactId) {
        this.shippingContactId = shippingContactId;
    }

    public Contact getShippingContact() {
        return shippingContact;
    }

    public void setShippingContact(Contact shippingContact) {
        this.shippingContactId = shippingContact.getId();
        this.shippingContact = shippingContact;
    }

    public CustAddress getShippingAddress() {
        return shippingAddress;
    }

    public void setShippingAddress(CustAddress shippingAddress) {
        this.shippingAddress = shippingAddress;
    }

    public boolean isBillingCustomerDifferent() {
        return isCustomerDifferent(getCustomer(), getBillingCustomer());
    }

    public long getBillingContactId() {
        return billingContactId;
    }

    public void setBillingContactId(long billingContactId) {
        this.billingContactId = billingContactId;
    }

    public Contact getBillingContact() {
        return billingContact;
    }

    public void setBillingContact(Contact billingContact) {
        this.billingContactId = billingContact.getId();
        this.billingContact = billingContact;
    }

    public CustAddress getBillingAddress() {
        return billingAddress;
    }

    public void setBillingAddress(CustAddress billingAddress) {
        this.billingAddress = billingAddress;
    }

    public long getManufacturerContactId() {
        return manufacturerContactId;
    }

    public void setManufacturerContactId(long manufacturerContactId) {
        this.manufacturerContactId = manufacturerContactId;
    }

    public Contact getManufacturerContact() {
        return manufacturerContact;
    }

    public void setManufacturerContact(Contact manufacturerContact) {
        this.manufacturerContactId = manufacturerContact.getId();
        this.manufacturerContact = manufacturerContact;
    }

    public CustAddress getManufacturerAddress() {
        return manufacturerAddress;
    }

    public void setManufacturerAddress(CustAddress manufacturerAddress) {
        this.manufacturerAddress = manufacturerAddress;
    }

    public String getVatRegId() {
        return vatRegId;
    }

    public void setVatRegId(String vatRegId) {
        this.vatRegId = vatRegId;
    }

    public String getPoNumber() {
        return poNumber;
    }

    public void setPoNumber(String poNumber) {
        this.poNumber = poNumber;
    }

    public String getRemitToCode() {
        return remitToCode;
    }

    public void setRemitToCode(String remitToCode) {
        this.remitToCode = remitToCode;
    }

    public Bank getRemitTo() {
        return remitTo;
    }

    public void setRemitTo(Bank remitTo) {
        this.remitToCode = remitTo.getBankCode();
        this.remitTo = remitTo;
    }

    public String getRemitToBankAccountNum() {
        return remitToBankAccountNum;
    }

    public void setRemitToBankAccountNum(String remitToBankAccountNum) {
        this.remitToBankAccountNum = remitToBankAccountNum;
    }

    public String getRemitToBankAccountBuName() {
        return remitToBankAccountBuName;
    }

    public void setRemitToBankAccountBuName(String remitToBankAccountBuName) {
        this.remitToBankAccountBuName = remitToBankAccountBuName;
    }

    public String getRemitToBankCode() {
        return remitToBankCode;
    }

    public void setRemitToBankCode(String remitToBankCode) {
        this.remitToBankCode = remitToBankCode;
    }

    public BankAccount getRemitToBankAccount() {
        return remitToBankAccount;
    }

    public void setRemitToBankAccount(BankAccount remitToBankAccount) {
        this.remitToBankAccountNum = remitToBankAccount.getBankAccountNum();
        this.remitToBankAccount = remitToBankAccount;
    }

    public String getPaymentReferenceNum() {
        return paymentReferenceNum;
    }

    public void setPaymentReferenceNum(String paymentReferenceNum) {
        this.paymentReferenceNum = paymentReferenceNum;
    }

    public PaymentType getPaymentType() {
        return paymentType;
    }

    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

    public String getPaymentTerms() {
        return paymentTerms;
    }

    public void setPaymentTerms(String paymentTerms) {
        this.paymentTerms = paymentTerms;
    }

    public boolean isPrepaymentRequired() {
        return prepaymentRequired;
    }

    public void setPrepaymentRequired(boolean prepaymentRequired) {
        this.prepaymentRequired = prepaymentRequired;
    }

    public String getContractCurrency() {
        return contractCurrency;
    }

    public void setContractCurrency(String contractCurrency) {
        this.contractCurrency = contractCurrency;
    }

    public String getTransactionCurrency() {
        return transactionCurrency;
    }

    public void setTransactionCurrency(String transactionCurrency) {
        this.transactionCurrency = transactionCurrency;
    }

    public String getInvoiceLanguage() {
        return invoiceLanguage;
    }

    public void setInvoiceLanguage(String invoiceLanguage) {
        this.invoiceLanguage = invoiceLanguage;
    }

    public String getInvoiceType() {
        return invoiceType;
    }

    public void setInvoiceType(String invoiceType) {
        this.invoiceType = invoiceType;
    }

    public String getInvoiceDescription() {
        return invoiceDescription;
    }

    public void setInvoiceDescription(String invoiceDescription) {
        this.invoiceDescription = invoiceDescription;
    }

    public Set<JobOrderNote> getNotes() {
        if(notes == null){
            notes = new HashSet<JobOrderNote>();
        }
        return notes;
    }

    public boolean addNote(JobOrderNote note) {
        return getNotes().add(note);
    }

    public boolean removeNote(Note note) {
        return getNotes().remove(note);
    }

    public void setNotes(Set<JobOrderNote> notes) {
        this.notes =notes;
    }
    
    public Set<JobOrderAttachment> getAttachments() {
        if(attachments == null){
            attachments = new HashSet<JobOrderAttachment>();
        }
        return attachments;
    }

    public boolean addAttachment(JobOrderAttachment attachment) {
        return getAttachments().add(attachment);
    }

    public boolean removeAttachment(Attachment attachment) {
        return getAttachments().remove(attachment);
    }

    public String getZoneId() {
        return zoneId;
    }

    public long getContactAddressId() {
        return contactAddressId;
    }

    public void setContactAddressId(long contactAddressId) {
        this.contactAddressId = contactAddressId;
    }

    public long getShippingAddressId() {
        return shippingAddressId;
    }

    public void setShippingAddressId(long shippingAddressid) {
        this.shippingAddressId = shippingAddressid;
    }

    public long getBillingAddressId() {
        return billingAddressId;
    }

    public void setBillingAddressId(long billingAddressId) {
        this.billingAddressId = billingAddressId;
    }

    public long getManfAddressId() {
        return manfAddressId;
    }

    public void setManfAddressId(long manfAddressId) {
        this.manfAddressId = manfAddressId;
    }

    public void setZoneId(String zoneId) {
        this.zoneId = zoneId;
    }

    public String getZoneDescription() {
        return zoneDescription;
    }

    public void setZoneDescription(String zoneDescription) {
        this.zoneDescription = zoneDescription;
    }

    public String getBillingCustCode() {
        return billingCustCode;
    }

    public void setBillingCustCode(String billingCustCode) {
        this.billingCustCode = billingCustCode;
    }

    public Customer getBillingCustomer() {
        return billingCustomer;
    }

    public void setBillingCustomer(Customer billingCustomer) {
        if (billingCustomer != null){
            this.billingCustCode = billingCustomer.getCustCode();
        }
        this.billingCustomer = billingCustomer;
    }

    public String getShippingCustCode() {
        return shippingCustCode;
    }

    public void setShippingCustCode(String shippingCustCode) {
        this.shippingCustCode = shippingCustCode;
    }

    public Customer getShippingCustomer() {
        return shippingCustomer;
    }

    public void setShippingCustomer(Customer shippingCustomer) {
        if (shippingCustomer != null){
            this.shippingCustCode = shippingCustomer.getCustCode();
        }
        this.shippingCustomer = shippingCustomer;
    }

    public String getManfCustCode() {
        return manfCustCode;
    }

    public void setManfCustCode(String manufacturerCustCode) {
        this.manfCustCode = manufacturerCustCode;
    }

    public Customer getManufacturerCustomer() {
        return manufacturerCustomer;
    }

    public void setManufacturerCustomer(Customer manufacturerCustomer) {
        if (manufacturerCustomer != null){
            this.manfCustCode = manufacturerCustomer.getCustCode();
        }
        this.manufacturerCustomer = manufacturerCustomer;
    }


  public Set<JobOrderNote> removeNotes(JobOrderNote... notes) {
  Set<JobOrderNote> removed = new HashSet<JobOrderNote>();
  if (notes == null) {
      return removed;
  }

  Set<JobOrderNote> myNotes = this.getNotes();
  // removing all the notes
  for (int i = 0; myNotes != null && i < notes.length; i++) {
      if (myNotes.remove(notes[i])) {
          removed.add(notes[i]);
          notes[i].setJobContract(null);
      }
  }
  return removed;
  }

    public Set<CEJobOrderLineItem> removeCEJobOrderLineItem(CEJobOrderLineItem... lineItems) {
        Set<CEJobOrderLineItem> removed = new HashSet<CEJobOrderLineItem>();
        if (lineItems == null) {
            return removed;
        }

        if (lineItems != null) {
            Set<CEJobOrderLineItem> lis = this.getLineItems();
            // removing line items
            for (CEJobOrderLineItem li : lineItems) {
                if (lis.remove(li)) {
                    li.setJobContract(null);
                    removed.add(li);
                }
            }
        }
        return removed;
    }

//    /*
//    * remove the gien jolis from this jo
//    * return : a Set of actualy jolis removed or empty Set
//    */
//    public Set<CEJobOrderLineItem> removeJobOrderLineItem(CEJobOrderLineItem... jolis) {
//        Set<CEJobOrderLineItem> removedLineItems = removeOrderLineItem(jolis);
//        Set<CEJobOrderLineItem> removed = new HashSet<CEJobOrderLineItem>();
//        for (CEJobOrderLineItem lineItem : removedLineItems) {
//            removed.add((CEJobOrderLineItem) lineItem);
//        }
//        return removed;
////
////        Set<CEJobOrderLineItem> myJolis = this.getJobOrderLineItems();
////        // removing jolis
////        for(int i = 0; myJolis != null && i < jolis.length; i++){
////            if(myJolis.remove(jolis[i])){
////                jolis[i].setJobOrder(null);
////                removed.add(jolis[i]);
////            }
////        }
////        return removed;
//    }
//
//    public Set<ExpenseLineItem> removeExpenseLineItem(ExpenseLineItem... lineItems) {
//        Set<OrderLineItem> removedLineItems = removeOrderLineItem(lineItems);
//        Set<ExpenseLineItem> removed = new HashSet<ExpenseLineItem>();
//        for (OrderLineItem lineItem : removedLineItems) {
//            removed.add((ExpenseLineItem) lineItem);
//        }
//        return removed;
//    }
//

    /**
     * Add a list of new line items to the job order. If the line items is already
     * associated with some othe job order, some undesirable side effects may happen.
     * <p/>
     * There is a danger here, if this.lineItems is not populated at this point, but
     * later hibernate populates it, the new items not yet saved to the database will
     * not be part of the list and become "invisible"! Therefore, the caller is responsible
     * for making sure that the lineItem list is populated before calling this method.
     * This "out-of-synch" problem can be common to many other entity objects.
     *
     * @param lineItems
     */
    public void addLineItems(List<CEJobOrderLineItem> lineItems) {
        // when lazy loading is enabled, the next line will have the joli list populated
        Set<CEJobOrderLineItem> list = this.getLineItems();
        for (CEJobOrderLineItem joli : lineItems) {
            joli.setJobContract(this);
            list.add(joli);
        }
    }

    public void addLineItems(CEJobOrderLineItem... lineItems) {
        // when lazy loading is enabled, the next line will have the joli list populated
        Set<CEJobOrderLineItem> list = this.getLineItems();
        for (CEJobOrderLineItem joli : lineItems) {
            joli.setJobContract(this);
            list.add(joli);
        }
    }

    /**
     * Retrieve a list of job order items that are currently billable
     */
    public List<CEJobOrderLineItem> getBillableJobOrderLineItems() {
        List<CEJobOrderLineItem> billableItems = new ArrayList<CEJobOrderLineItem>();
        for (CEJobOrderLineItem joli : this.getJobOrderLineItems()) {
            if (joli.isBillable()) {
                billableItems.add(joli);
            }
        }
        return billableItems;
    }
    public Set<CEJobOrderLineItem> getLineItems() {
        if (lineItems == null) {
            lineItems = new HashSet<CEJobOrderLineItem>();
        }
        return lineItems;
    }

    public Set<CEJobOrderLineItem> getJobOrderLineItems() {
        Set<CEJobOrderLineItem> result = new HashSet<CEJobOrderLineItem>();
        for (CEJobOrderLineItem lineItem : getLineItems()) {
            if (lineItem instanceof CEJobOrderLineItem) {
                result.add((CEJobOrderLineItem) lineItem);
            }
        }
        return result;
    }
//
//    public Set<ExpenseLineItem> getExpenseLineItems() {
//        Set<ExpenseLineItem> result = new HashSet<ExpenseLineItem>();
//        for (OrderLineItem lineItem : getLineItems()) {
//            if (lineItem instanceof ExpenseLineItem) {
//                result.add((ExpenseLineItem) lineItem);
//            }
//        }
//        return result;
//    }

    public boolean addLineItem(CEJobOrderLineItem lineItem) {
        lineItem.setJobContract(this);
        return getLineItems().add(lineItem);
    }

    public boolean addJobOrderLineItem(CEJobOrderLineItem jobOrderLineItem) {
        return addLineItem(jobOrderLineItem);
    }

    public boolean removeLineItem(CEJobOrderLineItem lineItem) {
        return getLineItems().remove(lineItem);
    }
    
    public Set<JobContractService> getJobContractServices() {
        if(jobContractServices == null){
            jobContractServices = new HashSet<JobContractService>();
        }
        return jobContractServices;
    }
    
    public void addJobContractService(JobContractService obj){
        this.getJobContractServices().add(obj);
    }
    
    public void removeContractService(JobContractService obj){
        this.getJobContractServices().remove(obj);
    }

    public Set<JobContractTest> getJobContractTests() {
        if(this.jobContractTests == null){
            jobContractTests = new HashSet<JobContractTest>();
        }
        return jobContractTests;
    }
    
    public void addJobContractTests(JobContractTest obj){
        this.getJobContractTests().add(obj);
    }
    
    public void removeContractTest(JobContractSlate obj){
        this.getJobContractTests().remove(obj);
    }

    public Set<JobContractSlate> getJobContractSlates() {
        if(this.jobContractSlates == null){
            jobContractSlates = new HashSet<JobContractSlate>();
        }
        return jobContractSlates;
    }

    public void addJobContractSlates(JobContractSlate obj){
        this.getJobContractSlates().add(obj);
    }
    
    public void removeContractSlates(JobContractSlate obj){
        this.getJobContractSlates().remove(obj);
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getContractCurrencyCode()
     */
    @Override
    public String getContractCurrencyCode() {
        return this.getContractCurrency();
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getLanguage()
     */
    @Override
    public String getLanguage() {
        // TODO where to get this?
        return null;
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getOverrideCurrencyRate()
     */
    @Override
    public Double getOverrideCurrencyRate() {
        // TODO where to get this?
        return null;
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getProductType()
     */
    @Override
    public String getProductType() {
        // TODO where to get this?
        return null;
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getTransactionCurrencyCode()
     */
    @Override
    public String getTransactionCurrencyCode() {
        return this.getTransactionCurrency();
    }

    /**
     * @see com.intertek.phoenix.job.ContractJobOrder#getZone()
     */
    @Override
    public String getZone() {
        return this.getZoneId(); // TODO check this
    }

}


