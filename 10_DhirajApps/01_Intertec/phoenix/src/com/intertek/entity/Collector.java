package com.intertek.entity;
// Generated by Hibernate Tools 3.2.0.beta8


import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * Collector generated by hbm2java
 */
public class Collector  implements java.io.Serializable {

    // Fields    

     @NotBlank @Length(min=0, max=8) private String collectorCode;
     @NotBlank @Length(min=0, max=40) private String collectorName;

     // Constructors

    /** default constructor */
    public Collector() {
    }

    /** full constructor */
    public Collector(String collectorCode, String collectorName) {
       this.collectorCode = collectorCode;
       this.collectorName = collectorName;
    }
   
    // Property accessors
    public String getCollectorCode() {
        return this.collectorCode;
    }
    
    public void setCollectorCode(String collectorCode) {
        this.collectorCode = collectorCode;
    }
    public String getCollectorName() {
        return this.collectorName;
    }
    
    public void setCollectorName(String collectorName) {
        this.collectorName = collectorName;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof Collector) ) return false;
		 Collector castOther = ( Collector ) other; 
         
		 return ( (this.getCollectorCode()==castOther.getCollectorCode()) || ( this.getCollectorCode()!=null && castOther.getCollectorCode()!=null && this.getCollectorCode().equals(castOther.getCollectorCode()) ) )
 && ( (this.getCollectorName()==castOther.getCollectorName()) || ( this.getCollectorName()!=null && castOther.getCollectorName()!=null && this.getCollectorName().equals(castOther.getCollectorName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getCollectorCode() == null ? 0 : this.getCollectorCode().hashCode() );
         result = 37 * result + ( getCollectorName() == null ? 0 : this.getCollectorName().hashCode() );
         return result;
   }   


}


