package com.intertek.entity;
// Generated by Hibernate Tools 3.2.0.beta8


import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * CreditAnalyst generated by hbm2java
 */
public class CreditAnalyst  implements java.io.Serializable {

    // Fields    

     @NotBlank @Length(min=0, max=8) private String creditAnalystCode;
     @NotBlank @Length(min=0, max=40) private String crAnalystName;

     // Constructors

    /** default constructor */
    public CreditAnalyst() {
    }

    /** full constructor */
    public CreditAnalyst(String creditAnalystCode, String crAnalystName) {
       this.creditAnalystCode = creditAnalystCode;
       this.crAnalystName = crAnalystName;
    }
   
    // Property accessors
    public String getCreditAnalystCode() {
        return this.creditAnalystCode;
    }
    
    public void setCreditAnalystCode(String creditAnalystCode) {
        this.creditAnalystCode = creditAnalystCode;
    }
    public String getCrAnalystName() {
        return this.crAnalystName;
    }
    
    public void setCrAnalystName(String crAnalystName) {
        this.crAnalystName = crAnalystName;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof CreditAnalyst) ) return false;
		 CreditAnalyst castOther = ( CreditAnalyst ) other; 
         
		 return ( (this.getCreditAnalystCode()==castOther.getCreditAnalystCode()) || ( this.getCreditAnalystCode()!=null && castOther.getCreditAnalystCode()!=null && this.getCreditAnalystCode().equals(castOther.getCreditAnalystCode()) ) )
 && ( (this.getCrAnalystName()==castOther.getCrAnalystName()) || ( this.getCrAnalystName()!=null && castOther.getCrAnalystName()!=null && this.getCrAnalystName().equals(castOther.getCrAnalystName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getCreditAnalystCode() == null ? 0 : this.getCreditAnalystCode().hashCode() );
         result = 37 * result + ( getCrAnalystName() == null ? 0 : this.getCrAnalystName().hashCode() );
         return result;
   }   


}


