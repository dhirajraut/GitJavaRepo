package com.intertek.entity;
// Generated by Hibernate Tools 3.2.0.beta8


import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * UomTable generated by hbm2java
 */
public class UomTable  implements java.io.Serializable {

    // Fields    

     @NotBlank @Length(min=0, max=45) private String uom;
     private Integer intData4;
     @NotBlank @Length(min=0, max=450) private String rbKey;
     private Boolean useOnHeader;

     // Constructors

    /** default constructor */
    public UomTable() {
    }

	/** minimal constructor */
    public UomTable(String uom) {
        this.uom = uom;
    }
    /** full constructor */
    public UomTable(String uom, Integer intData4, String rbKey, Boolean useOnHeader) {
       this.uom = uom;
       this.intData4 = intData4;
       this.rbKey = rbKey;
       this.useOnHeader = useOnHeader;
    }
   
    // Property accessors
    public String getUom() {
        return this.uom;
    }
    
    public void setUom(String uom) {
        this.uom = uom;
    }
    public Integer getIntData4() {
        return this.intData4;
    }
    
    public void setIntData4(Integer intData4) {
        this.intData4 = intData4;
    }
    public String getRbKey() {
        return this.rbKey;
    }
    
    public void setRbKey(String rbKey) {
        this.rbKey = rbKey;
    }
    public Boolean getUseOnHeader() {
        return this.useOnHeader;
    }
    
    public void setUseOnHeader(Boolean useOnHeader) {
        this.useOnHeader = useOnHeader;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof UomTable) ) return false;
		 UomTable castOther = ( UomTable ) other; 
         
		 return ( (this.getUom()==castOther.getUom()) || ( this.getUom()!=null && castOther.getUom()!=null && this.getUom().equals(castOther.getUom()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getUom() == null ? 0 : this.getUom().hashCode() );
         
         
         
         return result;
   }   


}


