package com.intertek.entity;
// Generated by Hibernate Tools 3.2.0.beta8


import java.util.HashSet;
import java.util.Set;
import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * JobProdSample generated by hbm2java
 */
public class JobProdSample  implements java.io.Serializable {

    // Fields    

     private JobProdSampleId jobProdSampleId;
     private JobProd jobProd;
     @NotBlank @Length(min=0, max=4) private String jobSampleLocation;
     @Length(min=0, max=254) private String tankNumber;
     @Length(min=0, max=4) private String sampleTiming;
     private int sampleNumber;
     private int sortOrder;
     @Length(min=0, max=4) private String sampleType;
     @Length(min=0, max=4) private String sampleVolume;
     @Length(min=0, max=4) private String containerType;
     @Length(min=0, max=4) private String retainTested;
     @Length(min=0, max=10) private String priority;
     @Length(min=0, max=1024) private String sampleInstructions;
     private Set<JobTest> jobTests = new HashSet<JobTest>(0);
     private Set<JobManualTest> jobManualTests = new HashSet<JobManualTest>(0);
     private Set<JobSlate> jobSlates = new HashSet<JobSlate>(0);

     // Constructors

    /** default constructor */
    public JobProdSample() {
    }

	/** minimal constructor */
    public JobProdSample(JobProdSampleId jobProdSampleId, String jobSampleLocation) {
        this.jobProdSampleId = jobProdSampleId;
        this.jobSampleLocation = jobSampleLocation;
    }
    /** full constructor */
    public JobProdSample(JobProdSampleId jobProdSampleId, JobProd jobProd, String jobSampleLocation, String tankNumber, String sampleTiming, int sampleNumber, int sortOrder, String sampleType, String sampleVolume, String containerType, String retainTested, String priority, String sampleInstructions, Set<JobTest> jobTests, Set<JobManualTest> jobManualTests, Set<JobSlate> jobSlates) {
       this.jobProdSampleId = jobProdSampleId;
       this.jobProd = jobProd;
       this.jobSampleLocation = jobSampleLocation;
       this.tankNumber = tankNumber;
       this.sampleTiming = sampleTiming;
       this.sampleNumber = sampleNumber;
       this.sortOrder = sortOrder;
       this.sampleType = sampleType;
       this.sampleVolume = sampleVolume;
       this.containerType = containerType;
       this.retainTested = retainTested;
       this.priority = priority;
       this.sampleInstructions = sampleInstructions;
       this.jobTests = jobTests;
       this.jobManualTests = jobManualTests;
       this.jobSlates = jobSlates;
    }
   
    // Property accessors
    public JobProdSampleId getJobProdSampleId() {
        return this.jobProdSampleId;
    }
    
    public void setJobProdSampleId(JobProdSampleId jobProdSampleId) {
        this.jobProdSampleId = jobProdSampleId;
    }
    public JobProd getJobProd() {
        return this.jobProd;
    }
    
    public void setJobProd(JobProd jobProd) {
        this.jobProd = jobProd;
    }
    public String getJobSampleLocation() {
        return this.jobSampleLocation;
    }
    
    public void setJobSampleLocation(String jobSampleLocation) {
        this.jobSampleLocation = jobSampleLocation;
    }
    public String getTankNumber() {
        return this.tankNumber;
    }
    
    public void setTankNumber(String tankNumber) {
        this.tankNumber = tankNumber;
    }
    public String getSampleTiming() {
        return this.sampleTiming;
    }
    
    public void setSampleTiming(String sampleTiming) {
        this.sampleTiming = sampleTiming;
    }
    public int getSampleNumber() {
        return this.sampleNumber;
    }
    
    public void setSampleNumber(int sampleNumber) {
        this.sampleNumber = sampleNumber;
    }
    public int getSortOrder() {
        return this.sortOrder;
    }
    
    public void setSortOrder(int sortOrder) {
        this.sortOrder = sortOrder;
    }
    public String getSampleType() {
        return this.sampleType;
    }
    
    public void setSampleType(String sampleType) {
        this.sampleType = sampleType;
    }
    public String getSampleVolume() {
        return this.sampleVolume;
    }
    
    public void setSampleVolume(String sampleVolume) {
        this.sampleVolume = sampleVolume;
    }
    public String getContainerType() {
        return this.containerType;
    }
    
    public void setContainerType(String containerType) {
        this.containerType = containerType;
    }
    public String getRetainTested() {
        return this.retainTested;
    }
    
    public void setRetainTested(String retainTested) {
        this.retainTested = retainTested;
    }
    public String getPriority() {
        return this.priority;
    }
    
    public void setPriority(String priority) {
        this.priority = priority;
    }
    public String getSampleInstructions() {
        return this.sampleInstructions;
    }
    
    public void setSampleInstructions(String sampleInstructions) {
        this.sampleInstructions = sampleInstructions;
    }
    public Set<JobTest> getJobTests() {
        return this.jobTests;
    }
    
    public void setJobTests(Set<JobTest> jobTests) {
        this.jobTests = jobTests;
    }
    public Set<JobManualTest> getJobManualTests() {
        return this.jobManualTests;
    }
    
    public void setJobManualTests(Set<JobManualTest> jobManualTests) {
        this.jobManualTests = jobManualTests;
    }
    public Set<JobSlate> getJobSlates() {
        return this.jobSlates;
    }
    
    public void setJobSlates(Set<JobSlate> jobSlates) {
        this.jobSlates = jobSlates;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof JobProdSample) ) return false;
		 JobProdSample castOther = ( JobProdSample ) other; 
         
		 return ( (this.getJobProdSampleId()==castOther.getJobProdSampleId()) || ( this.getJobProdSampleId()!=null && castOther.getJobProdSampleId()!=null && this.getJobProdSampleId().equals(castOther.getJobProdSampleId()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getJobProdSampleId() == null ? 0 : this.getJobProdSampleId().hashCode() );
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   


}


