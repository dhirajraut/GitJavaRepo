package com.intertek.entity;

// Generated by Hibernate Tools 3.2.0.beta8

import java.util.HashSet;
import java.util.Set;
import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * Role generated by hbm2java
 */
public class Role implements java.io.Serializable {

    // Fields

    @NotBlank
    @Length(min = 0, max = 128)
    private String name;
    @Length(min = 0, max = 25)
    private String roleDesc;
    private Set<User> users = new HashSet<User>(0);
    private Set<Permission> permissions = new HashSet<Permission>(0);
    private Set<Solution> solutions = new HashSet<Solution>(0);

    // Constructors

    /** default constructor */
    public Role() {
    }

    /** minimal constructor */
    public Role(String name) {
        this.name = name;
    }

    /** full constructor */
    public Role(String name, String roleDesc, Set<User> users, Set<Permission> permissions, Set<Solution> solutions) {
        this.name = name;
        this.roleDesc = roleDesc;
        this.users = users;
        this.permissions = permissions;
        this.solutions = solutions;
    }

    // Property accessors
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getRoleDesc() {
        return this.roleDesc;
    }

    public void setRoleDesc(String roleDesc) {
        this.roleDesc = roleDesc;
    }

    public Set<User> getUsers() {
        return this.users;
    }

    public void setUsers(Set<User> users) {
        this.users = users;
    }

    public Set<Permission> getPermissions() {
        return this.permissions;
    }

    public void setPermissions(Set<Permission> permissions) {
        this.permissions = permissions;
    }

    public Set<Solution> getSolutions() {
        return this.solutions;
    }

    public void setSolutions(Set<Solution> solutions) {
        this.solutions = solutions;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof Role))
            return false;
        Role castOther = (Role) other;

        return ((this.getName() == castOther.getName()) || (this.getName() != null && castOther.getName() != null && this.getName().equals(castOther.getName())));
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result + (getName() == null ? 0 : this.getName().hashCode());
        return result;
    }
    
    public void addPermision(Permission newPerm){
        this.permissions.add(newPerm);
    }
}
