package com.intertek.entity;
// Generated by Hibernate Tools 3.2.0.beta8


import org.springmodules.validation.bean.conf.loader.annotation.handler.*;

/**
 * RBLanguage generated by hbm2java
 */
public class RBLanguage  implements java.io.Serializable {

    // Fields    

     private RBLanguageId rbLanguageId;
     @Length(min=0, max=9) private String rbType;
     @Length(min=0, max=3900) private String rbValue;

     // Constructors

    /** default constructor */
    public RBLanguage() {
    }

	/** minimal constructor */
    public RBLanguage(RBLanguageId rbLanguageId) {
        this.rbLanguageId = rbLanguageId;
    }
    /** full constructor */
    public RBLanguage(RBLanguageId rbLanguageId, String rbType, String rbValue) {
       this.rbLanguageId = rbLanguageId;
       this.rbType = rbType;
       this.rbValue = rbValue;
    }
   
    // Property accessors
    public RBLanguageId getRbLanguageId() {
        return this.rbLanguageId;
    }
    
    public void setRbLanguageId(RBLanguageId rbLanguageId) {
        this.rbLanguageId = rbLanguageId;
    }
    public String getRbType() {
        return this.rbType;
    }
    
    public void setRbType(String rbType) {
        this.rbType = rbType;
    }
    public String getRbValue() {
        return this.rbValue;
    }
    
    public void setRbValue(String rbValue) {
        this.rbValue = rbValue;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof RBLanguage) ) return false;
		 RBLanguage castOther = ( RBLanguage ) other; 
         
		 return ( (this.getRbLanguageId()==castOther.getRbLanguageId()) || ( this.getRbLanguageId()!=null && castOther.getRbLanguageId()!=null && this.getRbLanguageId().equals(castOther.getRbLanguageId()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getRbLanguageId() == null ? 0 : this.getRbLanguageId().hashCode() );
         
         
         return result;
   }   


}


