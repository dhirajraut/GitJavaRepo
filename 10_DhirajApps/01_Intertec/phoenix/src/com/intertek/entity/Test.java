package com.intertek.entity;

// Generated by Hibernate Tools 3.2.0.beta8

import javax.persistence.Entity;
import javax.persistence.Id;

import org.springmodules.validation.bean.conf.loader.annotation.handler.Length;
import org.springmodules.validation.bean.conf.loader.annotation.handler.NotBlank;

/**
 * Test generated by hbm2java
 */
@Entity
public class Test implements java.io.Serializable {

    // Fields

    @Id
    @NotBlank
    @Length(min = 0, max = 96)
    private String testId;
    @Length(min = 0, max = 450)
    private String rbKey;
    @Length(min = 0, max = 762)
    private String testDescription;
    @Length(min = 0, max = 96)
    private String methodNum;
    @Length(min = 0, max = 762)
    private String methodTitle;
    @Length(min = 0, max = 96)
    private String busStream;
    @Length(min = 0, max = 96)
    private String linkedMethod;
    @Length(min = 0, max = 762)
    private String methodPbNote;
    @Length(min = 0, max = 762)
    private String techRemarks;
    @Length(min = 0, max = 96)
    private String equivMethod;
    @Length(min = 0, max = 762)
    private String billingGuideLine;
    @Length(min = 0, max = 12)
    private String testCategory;
    @Length(min = 0, max = 12)
    private String testStatus;
    @Length(min = 0, max = 12)
    private String sdo;
    @Length(min = 0, max = 12)
    private String technique;
    @Length(min = 0, max = 762)
    private String searchText254;
    @Length(min = 0, max = 762)
    private String notes254;
    @Length(min = 0, max = 762)
    private String pbDesc;

    /*
    @ManyToMany
    @JoinTable(name = "TEST_SERVICE_OFFERING", joinColumns = { @JoinColumn(name = "TEST_ID", unique = true) }, inverseJoinColumns = { @JoinColumn(name = "SERVICE_OFFERING_ID") })
    private Set<ServiceOffering> serviceOfferings;
    //@ManyToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    //@JoinTable(name = "TEST_SERVICE_OFFERING", joinColumns = { @JoinColumn(name = "TEST_ID") }, inverseJoinColumns = { @JoinColumn(name = "SERVICE_OFFERING_ID") })
    // @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)   
     */
    
    // Constructors
    /*  default constructor */
    public Test() {
    }

    /** minimal constructor */
    public Test(String testId) {
        this.testId = testId;
    }

    /** full constructor */
    public Test(String testId, String rbKey, String testDescription, String methodNum, String methodTitle, String busStream, String linkedMethod,
            String methodPbNote, String techRemarks, String equivMethod, String billingGuideLine, String testCategory, String testStatus, String sdo,
            String technique, String searchText254, String notes254, String pbDesc) {
        this.testId = testId;
        this.rbKey = rbKey;
        this.testDescription = testDescription;
        this.methodNum = methodNum;
        this.methodTitle = methodTitle;
        this.busStream = busStream;
        this.linkedMethod = linkedMethod;
        this.methodPbNote = methodPbNote;
        this.techRemarks = techRemarks;
        this.equivMethod = equivMethod;
        this.billingGuideLine = billingGuideLine;
        this.testCategory = testCategory;
        this.testStatus = testStatus;
        this.sdo = sdo;
        this.technique = technique;
        this.searchText254 = searchText254;
        this.notes254 = notes254;
        this.pbDesc = pbDesc;
    }

    // Property accessors
    public String getTestId() {
        return this.testId;
    }

    public void setTestId(String testId) {
        this.testId = testId;
    }

    public String getRbKey() {
        return this.rbKey;
    }

    public void setRbKey(String rbKey) {
        this.rbKey = rbKey;
    }

    public String getTestDescription() {
        return this.testDescription;
    }

    public void setTestDescription(String testDescription) {
        this.testDescription = testDescription;
    }

    public String getMethodNum() {
        return this.methodNum;
    }

    public void setMethodNum(String methodNum) {
        this.methodNum = methodNum;
    }

    public String getMethodTitle() {
        return this.methodTitle;
    }

    public void setMethodTitle(String methodTitle) {
        this.methodTitle = methodTitle;
    }

    public String getBusStream() {
        return this.busStream;
    }

    public void setBusStream(String busStream) {
        this.busStream = busStream;
    }

    public String getLinkedMethod() {
        return this.linkedMethod;
    }

    public void setLinkedMethod(String linkedMethod) {
        this.linkedMethod = linkedMethod;
    }

    public String getMethodPbNote() {
        return this.methodPbNote;
    }

    public void setMethodPbNote(String methodPbNote) {
        this.methodPbNote = methodPbNote;
    }

    public String getTechRemarks() {
        return this.techRemarks;
    }

    public void setTechRemarks(String techRemarks) {
        this.techRemarks = techRemarks;
    }

    public String getEquivMethod() {
        return this.equivMethod;
    }

    public void setEquivMethod(String equivMethod) {
        this.equivMethod = equivMethod;
    }

    public String getBillingGuideLine() {
        return this.billingGuideLine;
    }

    public void setBillingGuideLine(String billingGuideLine) {
        this.billingGuideLine = billingGuideLine;
    }

    public String getTestCategory() {
        return this.testCategory;
    }

    public void setTestCategory(String testCategory) {
        this.testCategory = testCategory;
    }

    public String getTestStatus() {
        return this.testStatus;
    }

    public void setTestStatus(String testStatus) {
        this.testStatus = testStatus;
    }

    public String getSdo() {
        return this.sdo;
    }

    public void setSdo(String sdo) {
        this.sdo = sdo;
    }

    public String getTechnique() {
        return this.technique;
    }

    public void setTechnique(String technique) {
        this.technique = technique;
    }

    public String getSearchText254() {
        return this.searchText254;
    }

    public void setSearchText254(String searchText254) {
        this.searchText254 = searchText254;
    }

    public String getNotes254() {
        return this.notes254;
    }

    public void setNotes254(String notes254) {
        this.notes254 = notes254;
    }

    public String getPbDesc() {
        return this.pbDesc;
    }

    public void setPbDesc(String pbDesc) {
        this.pbDesc = pbDesc;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof Test))
            return false;
        Test castOther = (Test) other;

        return ((this.getTestId() == castOther.getTestId()) || (this.getTestId() != null && castOther.getTestId() != null && this.getTestId()
                .equals(castOther.getTestId())));
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result + (getTestId() == null ? 0 : this.getTestId().hashCode());

        return result;
    }
/*
    public Set<ServiceOffering> getServiceOfferings() {
        return serviceOfferings;
    }

    public void setServiceOfferings(Set<ServiceOffering> serviceOfferings) {
        this.serviceOfferings = serviceOfferings;
    }
*/
}
